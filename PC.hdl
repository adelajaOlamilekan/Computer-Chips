// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
	//Fanning out the output bits
	And16(a=registerValue, b=true, out=out);
			
	//Increamenting the current value
	Inc16(in=registerValue, out=increament);
			
	//Selection of input to the counter based on control bits combination
	CounterMux4Way16(in=in, zero=false, previous=registerValue, increament=increament, load=load, inc=inc, reset=reset, out=counterState);
	
	//Storing the current value in the register
	Register(in=counterState, load=true, out=registerValue);	
			
}
